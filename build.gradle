plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.gradleup.shadow' version '8.3.6' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {

        mavenCentral()
        maven { url = 'https://maven.maxhenkel.de/repository/public'}
        maven { url = 'https://api.modrinth.com/maven'}
        maven { url = 'https://cursemaven.com'}
        maven { url = 'https://maven.kosmx.dev' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.essential.gg/repository/maven-public'}
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots'}
        maven { url = 'https://downhill.ddns.net/maven'}
        maven { url = 'https://jitpack.io'}

        maven { url = 'https://maven.su5ed.dev/releases'}

        maven { url = 'https://maven.deftu.dev/snapshots'}
        maven { url = 'https://maven.deftu.dev/releases'}

        maven { url = 'https://maven.saps.dev/minecraft'}

        maven { url = 'https://maven.izzel.io/releases'}

        maven {
            name = 'GeckoLib'
            url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
            content {
                includeGroupByRegex("software\\.bernie.*")
                includeGroup("com.eliotlash.mclib")
            }
        }

        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"

        mappings loom.layered {
            officialMojangMappings()

            parchment("org.parchmentmc.data:parchment-1.20.2:2023.10.08@zip")
        }

        implementation("com.github.stephengold:jolt-jni-Linux64:2.1.0")
        implementation("com.github.stephengold:jolt-jni-Windows64:2.1.0:DebugDp")
        implementation("com.github.stephengold:jolt-jni-Linux64:2.1.0:DebugDp")
        implementation("com.github.stephengold:jolt-jni-Linux_ARM64:2.1.0:DebugDp")
        implementation("com.github.stephengold:jolt-jni-MacOSX64:2.1.0:DebugDp")
        implementation("com.github.stephengold:jolt-jni-MacOSX_ARM64:2.1.0:DebugDp")
        implementation("io.github.electrostat-lab:snaploader:1.1.1-stable")

    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        repositories {

        }
    }
}